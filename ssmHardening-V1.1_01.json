{
    "schemaVersion": "2.2",
    "description": "Use this document to deploy and configure Sophos antivirus ",
    "mainSteps": [
      {
        "action": "aws:runShellScript",
        "name": "runShellScript",
        "precondition": {
          "StringEquals": [
            "platformType",
            "Linux"
          ]
        },
        "inputs": {
          "runCommand": [

            "#!/bin/bash",

            "mkdir -p /var/log/path",
            "touch /var/log/path/hardening.log",
            "log_file=/var/log/path/hardening.log",

            "# Function to log messages",
            "log() {",
            "local log_level=$1",
            "local message=$2",
            "local timestamp=$(date +'%Y-%m-%d %H:%M:%S')",
            "echo \"[$timestamp] [$log_level] - $message\" >> $log_file",
            "}",

            "cramfsModule=cramfs",
            "squashfsModule=squashfs",
            "udfMoudle=udf",
            "usbModule=usb-storage",
            "# 1.1.1.1 Ensure mounting of cramfs filesystems is disabled (Automated)",
            "# 1.1.1.2 Ensure mounting of squashfs filesystems is disabled (Automated)",
            "# 1.1.1.3 Ensure mounting of udf filesystems is disabled (Automated)",
            "for module in $cramfsModule $squashfsModule $udfMoudle $usbModule; do",
            "# Check if modules are loaded",
            "if lsmod | grep -q $module; then",
            "log \"INFO\" \"$module module is loaded, Unloading it now\"",
            "# Unload the module",
            "rmmod $module",
            "if [ $? -eq 0 ]; then",
            "log \"INFO\" \"$module module successfully unloaded\"",
            "else",
            "log \"INFO\" \"failed to unload $module module\"",
            "fi",
            "else",
            "log \"INFO\" \"$module module is not loaded, already\"",
            "fi",
            "# Check if The mdoule is blacklisted",
            "if grep -E \"^blacklist\\s+$module\" /etc/modprobe.d/*; then",
            "log \"INFO\" \"$module is blacklisted\"",
            "else",
            "# Append to module.conf file",
            "printf \"install $module /bin/false\nblacklist $module\n\" >> \"/etc/modprobe.d/$module.conf\"",
            "log \"INFO\" \"$module has been added to the blacklist\"",
            "fi",
            "done",

            "# 1.1.9 Disable Automounting (Automated)",
            "# Check if autofs service exist/enable",
            "if systemctl is-enabled autofs; then",
              "log \"INFO\" \"autofs is enabled, Working on remove the autofs package now\"",
              "# remove autofs package",
              "yum remove autofs -y",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"autofs package has been removed successfully\"",
              "else",
              "log \"INFO\" \"Failed to remove autofs package\"",
              "fi",
            "else",
              "log \"INFO\" \"autofs is not exist/enabled already\"",
            "fi",
            "# 1.5.1 Ensure core dump storage is disabled (Automated)",
            "if grep -i '^\\s*storage\\s*=\\s*none' /etc/systemd/coredump.conf; then",
            "log \"INFO\" \"the core dump storage is set to none already\"",
            "else",
            "log \"INFO\" \"The core dump not configred, Setting it to none now\"",
            "sed -i '/Storage/ { s/.*/Storage=none/ }' /etc/systemd/coredump.conf",
            "if [ $? -eq 0 ]; then",
            "log \"INFO\" \"The value set to none successfully\"",
            "else",
            "log \"INFO\" \"failed to set the core dump value value\"",
            "fi",
            "fi",

            "# 1.5.2 Ensure core dump backtraces are disabled (Automated)",
            "if grep -i '^\\s*ProcessSizeMax\\s*=\\s*0' /etc/systemd/coredump.conf; then",
            "log \"INFO\" \"The ProcessSizeMax has been set to 0 already\"",
            "else",
            "log \"INFO\" \"The ProcessSizeMax Didn't set to 0, Setting it now\"",
            "# Replace the ProcessSizeMax value to 0",
            "sed -i '/ProcessSizeMax/ { s/.*/ProcessSizeMax=0/ }' /etc/systemd/coredump.conf",
            "# check Previos command result",
            "if [ $? -eq 0 ]; then",
            "log \"INFO\" \"The value of ProcessSizeMax has been set to 0 successfully\"",
            "else",
            "log \"INFO\" \"Failed to set the ProcessSizeMax value to 0\"",
            "fi",
            "fi",

            "# 1.5.3 Ensure address space layout randomization (ASLR) is enabled",
            "# Get the variable value only using -n option",
            "if [ \"$(sysctl -n kernel.randomize_va_space)\" == \"2\" ]; then",
            "log \"INFO\" \"The ASLR value has been set to 2 already\"",
            "else",
            "log \"INFO\" \"The ASLR value didn't set to 2, Setting it now.\"",
            "# setting the kernel parameters",
            "printf \"kernel.randomize_va_space = 2\n\" >> /etc/sysctl.d/60-kernel_sysctl.conf",
            "# check Previos command result",
            "if [ $? -eq 0 ]; then",
            "log \"INFO\" \"the 2 value has been added to /etc/sysctl.d/60-kernel_sysctl.conf file successfully\"",
            "else",
            "log \"INFO\" \"Failed to add the 2 value for kernel.randomize_va_space\"",
            "fi",
            "# set the active kernel parameter",
            "sysctl -w kernel.randomize_va_space=2",
            "# check Previos command result",
            "if [ $? -eq 0 ]; then",
            "log \"INFO\" \"The kernel parameter has been activated successfully\"",
            "else",
            "log \"INFO\" \"Failed to activated The kernel parameter\"",
            "fi",
            "fi",

            "# Set SELinux to Permissive Mode",
            "log \"INFO\" \"Setting SELinux to permissive mode...\"",
            "sudo setenforce 0",
            "# check Previos command result",
            "if [ $? -eq 0 ]; then",
            "log \"INFO\" \"the SELinux has been set to Permissive mode Successfully\"",
            "else    ",
            "log \"INFO\" \"failed to set Permissive mode\"",
            "fi",

            "# 1.7 Command Line Warning Banners",
            "motd=/etc/motd",
            "issue=/etc/issue",
            "issue_net=/etc/issue.net",
            "# Ensure the files are exist",
            "for file in $motd $issue $issue_net; do",
            "if [ ! -e $file ]; then",
            "touch $file",
            "fi",
            "done",
            "if ! grep -q \"###############\" $motd || grep -q \"###############\" $issue || grep -q \"###############\" $issue_net; then",
            "log \"INFO\" \"The banner not exist, Appending it now\"",
            "# Append the Banner with for loop",
            "for file in $motd $issue $issue_net; do",
            "echo '",
            "###################################################################",
            "#                                                                 #",
            "#                                                                 #",
            "#             $$$$$$\\  $$$$$$$\\  $$$$$$$$\\  $$$$$$\\               #",
            "#            $$  __$$\\ $$  __$$\\ \\____$$  | \\____$$\\              #",
            "#            $$$$$$$$ |$$ |  $$ |  $$$$ _/  $$$$$$$ |             #",
            "#            $$   ____|$$ |  $$ | $$  _/   $$  __$$ |             #",
            "#            \\$$$$$$$\\ $$ |  $$ |$$$$$$$$\\ \\$$$$$$$ |             #",
            "#             \\_______|\\__|  \\__|\\________| \\_______|             #",
            "#                                                                 #",
            "#                                                                 #",
            "# This system is for the use of authorized users only.            #",
            "# Individuals using this computer system without authority, or in #",
            "# excess of their authority, are subject to having all of their   #",
            "# activities on this system monitored and recorded by system      #",
            "# personnel.                                                      #",
            "#                                                                 #",
            "# In the course of monitoring individuals improperly using this   #",
            "# system, or in the course of system maintenance, the activities  #",
            "# of authorized users may also be monitored.                      #",
            "#                                                                 #",
            "# Anyone using this system expressly consents to such monitoring  #",
            "# and is advised that if such monitoring reveals possible         #",
            "# evidence of criminal activity, system personnel may provide the #",
            "# evidence of such monitoring to law enforcement officials.       #",
            "###################################################################",
            "' > \"$file\"",
            "done",
            
            "# check Previos command result",
            "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Banner has been addedd successfully\"",
            "else",
              "log \"INFO\" \"failed to add the banner\"",
            "fi",
            
            "else",
              "log \"INFO\" \"The banner is exist already\"",
            "fi",
            
            "# set the permisions",
            "log \"INFO\" \"Setting the root as owner, and exclude execution\"",
            "for perm in $motd $issue $issue_net; do",
              "chown root:root $perm",
              "chmod u-x,go-wx $perm",
            "done",
            
            "# check Previos command result",
            "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"Permisions has been set successfully\"",
            "else",
              "log \"INFO\" \"failed to set the permisions\"",
            "fi",

            "# 1.8.1 Ensure GNOME Display Manager is removed (Manual)",
            "if [ \"rpm -q gdm\" ]; then",
              "log \"INFO\" \"The GNOME display package is exist, Working on remove it\"",
              "# remove the package",
              "yum remove gdm -y",
              "if [ $? -eq 0 ] ; then",
              "log \"INFO\" \" The GNOME display package has been removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove the GNOME display package\"",
              "fi",
            "else",
              "log \"INFO\" \"The GNOME display package is not installed already\"",
            "fi",

            "# 1.8.5 Ensure automatic mounting of removable media is disabled (Automated)",
            "if [ \"gsettings get org.gnome.desktop.media-handling automount\" == \"false\" ]; then",
              "log \"INFO\" \"The auto mount of removable media is enabled. Workin on disbaling it now\"",
              "printf \"[org/gnome/desktop/media-handling]\nautomount=false\nautomount-open=false\"",
              "dconf update",
              "if [ $? -eq 0 ]; then",
                "log \"INFO\" \"The auto mount of removable media has been disabled successfully\"",
              "else    ",
                "log \"INFO\" \"failed to disable The auto mount of removable media\"",
              "fi",
            "else",
              "log \"INFO\" \"The auto mount of removable media has been disbaled already\"",
            "fi",

            "# 1.9 Ensure updates, patches, and additional security software are installed (Manual)",
            "if yum check-update; then",
              "log \"INFO\" \"There are some updates out there, working on update them\"",
              "yum update -y",
              "if [ $? -eq 0 ]; then",
                "log \"INFO\" \"Updated successfully\"",
              "else",
                "log \"INFO\" \"Failed to update \"",
              "fi",
            "else",
              "log \"INFO\" \"The system is up to date already\"",
            "fi",
            
            "# 1.10 Ensure system-wide crypto policy is not legacy (Automated) ",
            "# Check if the package is installed",
            "if ! rpm -q crypto-policies; then",
                "# Install the package",
                "yum install -y crypto-policies",
            "fi",

            "if [ grep -E -i '^\\s*LEGACY\\s*(\\s+#.*)?$' /etc/crypto-policies/config ]; then",
              "log \"INFO\" \"System-wide Crypto is configured on LEGACY, Working on configure it to DEFAULT\"",

              "# set the wide system crypto to default",
              "update-crypto-policies --set DEFAULT",

              "# Check previous command result value",
              "if [ $? -eq 0 ]; then",
                "log \"INFO\" \"The DEFAULT value has been set successfully\"",
              "else",
                "log \"INFO\" \"failed to set the DEFAULT value for update-crypto-policies\"",
              "fi",

            "else",
              "log \"INFO\" \"System-wide Crypto is Not configured on LEGACY already, Nothing to do\"",
            "fi",

              "# Run the following to make the updated system-wide crypto policy active",
              "update-crypto-policies",

              "# Check previous command result value",
              "if [ $? -eq 0 ]; then",
                "log \"INFO\" \"The DEFAULT value has been Updated successfully for system-wide crypto\"",
              "else",
                "log \"INFO\" \"failed to Update the DEFAULT value for system-wide crypto\"",
              "fi",

              "# 2.2.1 Ensure xinetd is not installed (Automated)",
              "if [ rpm -q xinetd ]; then ",
                "log \"INFO\" \"xinetd is installed, working on removing it now\"",
                "yum remove xinetd -y",
                "if [ $? -eq 0 ]; then",
                "log \"INFO\" \"xinetd removed successfully\"",
                "else",
                "log \"INFO\" \"failed to remove xinetd\"",
                "fi",
              "else",
                "log \"INFO\" \"xinetd is not installed already\"",
              "fi",

              "# 2.2.2 Ensure xorg-x11-server-common is not installed (Automated)",
              "if [ rpm -q xorg-x11-server-common ]; then",
                "log \"INFO\" \"xorg is installed, working on removing it now\"",
                "yum remove xorg-x11-server-common -y",
                "if [ $? -eq 0 ]; then",
                "log \"INFO\" \"The xorg removed successfully\"",
                "else",
                "log \"INFO\" \"failed to remove the xorg\"",
                "fi",
              "else   ",
                "log \"INFO\" \"xorg is not installed already\"",
              "fi",

              "# 2.2.3 Ensure Avahi Server is not installed (Automated)",
              "if [ rpm -q avahi-autoipd avahi ]; then",
                "log \"INFO\" \"avahi-autoipd avahi are installed, working on removing them now\"",
                "systemctl stop avahi-daemon.socket avahi-daemon.service",
                "yum remove avahi-autoipd avahi -y",
                "if [ $? -eq 0 ]; then",
                  "log \"INFO\" \"The avahi-autoipd avahi removed successfully\"",
                "else",
                  "log \"INFO\" \"failed to remove the avahi-autoipd avahi\"",
                "fi",
              "else",
              "log \"INFO\" \"avahi-autoipd avahi are not installed already\"",
              "fi",
  
  
              "# 2.2.4 Ensure CUPS is not installed (Automated)",
              "# CUPS enabling a computer to act as a print server",
              "if [ rpm -q cups ]; then",
                "log \"INFO\" \"CUPS is installed, working on removing it now\"",
                "yum remove cups -y",
                "if [ $? -eq 0 ]; then",
                  "log \"INFO\" \"The CUPS removed successfully\"",
                "else",
                  "log \"INFO\" \"failed to remove the CUPS\"",
                "fi",
              "else",
                "log \"INFO\" \"CUPS is not installed already\"",
              "fi",
  
  
  
              "# 2.2.5 Ensure DHCP Server is not installed (Automated)",
              "if [ rpm -q dhcp-server ]; then",
                "log \"INFO\" \"dhcp-server is installed, working on removing it now\"",
                "yum remove dhcp-server -y",
                "if [ $? -eq 0 ]; then",
                  "log \"INFO\" \"The dhcp-server removed successfully\"",
                "else",
                  "log \"INFO\" \"failed to remove the dhcp-server\"",
                "fi",
              "else",
                "log \"INFO\" \"dhcp-server is not installed already\"",
              "fi",
  
              "# 2.2.6 Ensure DNS Server is not installed (Automated)",
              "if [ rpm -q bind  ]; then",
                "log \"INFO\" \"bind package is installed, working on removing it now\"",
                "yum remove bind -y",
                "if [ $? -eq 0 ]; then",
                  "log \"INFO\" \"The bind package removed successfully\"",
                "else",
                  "log \"INFO\" \"failed to remove bind package\"",
                "fi",
              "else",
                "log \"INFO\" \"bind package is not installed already\"",
              "fi",

              "# 2.2.7 Ensure FTP Server is not installed (Automated)",
              "if [ rpm -q ftp  ]; then",
              "log \"INFO\" \"ftp package is installed, working on removing it now\"",
              "yum remove ftp -y",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The ftp package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove ftp package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"ftp package is not installed already\"",
              "fi",
              "# 2.2.8 Ensure VSFTP Server is not installed (Automated)",
              "if [ rpm -q vsftpd  ]; then",
              "log \"INFO\" \"vsftpd package is installed, working on removing it now\"",
              "yum remove vsftpd -y",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The vsftpd package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove vsftpd package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"vsftpd package is not installed already\"",
              "fi",

              "# 2.2.9 Ensure Ttftp-server Server is not installed (Automated)",
              "if [ rpm -q tftp-server  ]; then",
              "log \"INFO\" \"tftp-server package is installed, working on removing it now\"",
              "yum remove tftp-server -y",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The tftp-server package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove tftp-server package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"tftp-server package is not installed already\"",
              "fi",

              "# 2.2.10 Ensure a web server is not installed (Automated)",
              "if [ rpm -q httpd nginx ]; then",
              "log \"INFO\" \"The httpd, nginx packages are installed, working on removing them now\"",
              "yum remove httpd nginx",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"httpd, nginx removed succesfully\"",
              "else",
              "log \"INFO\" \"failed to remove httpd, nginx\"",
              "fi",
              "else",
              "log \"INFO\" \"httpd, nginx are not installed already\"",
              "fi",

              "# 2.2.11 Ensure IMAP and POP3 server is not installed (Automated)",
              "if [ rpm -q dovecot cyrus-imapd ]; then",
              "log \"INFO\" \"dovecot cyrus-imapd packages are installed, working on remving them now\"",
              "yum remove dovecot cyrus-imapd",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"dovecot cyrus-imapd packages have been removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove dovecot cyrus-imapd\"",
              "fi",
              "else",
              "log \"INFO\" \"dovecot cyrus-imapd packages are not installed already\"",
              "fi",

              "# 2.2.12 Ensure Samba is not installed (Automated)",
              "if [ rpm -q samba ]; then",
              "log \"INFO\" \"samba package is installed, working on remving it now\"",
              "yum remove samba",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"samba package has been removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove samba\"",
              "fi",
              "else",
              "log \"INFO\" \"samba package is not installed already\"",
              "fi",

              "# 2.2.13 Ensure HTTP Proxy Server is not installed (Automated)",
              "if [ rpm -q squid  ]; then",
              "log \"INFO\" \"squid package is installed, working on removing it now\"",
              "yum remove squid",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The squid package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove squid package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"squid package is not installed already\"",
              "fi",

              "# 2.2.13 Ensure HTTP Proxy Server is not installed (Automated)",
              "if [ rpm -q net-snmp ]; then",
              "log \"INFO\" \"net-snmp package is installed, working on removing it now\"",
              "yum remove net-snmp",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net-snmp package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove net-snmp package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"net-snmp package is not installed already\"",
              "fi",


              "# 2.2.15 Ensure NIS server is not installed (Automated)",
              "if [ rpm -q ypserv ]; then",
              "log \"INFO\" \"ypserv package is installed, working on removing it now\"",
              "yum remove ypserv",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The ypserv package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove ypserv package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"ypserv package is not installed already\"",
              "fi",
              
              "# 2.2.16 Ensure telnet-server is not installed (Automated)",
              "if [ rpm -q telnet-server  ]; then    ",
              "log \"INFO\" \"telnet-server package is installed, working on removing it now\"",
              "yum remove telnet-server",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The telnet-server package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove telnet-server package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"telnet-server package is not installed already\"",
              "fi",

              "# 2.2.17 Ensure mail transfer agent is configured for local-only mode (Automated)",
              "if [ rpm -q postfix ]; then",
              "log \"INFO\" \"postfix package is installed, working on removing it now\"",
              "yum remove postfix",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The postfix package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove postfix package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"postfix package is not installed already\"",
              "fi",

              "# 2.2.18 Ensure nfs-utils is not installed or the nfs-server service is masked (Automated)",
              "#  The nfs-utils package contains utilities and daemons for using the Network File System (NFS), which is a distributed file system protocol allowing a user on a client computer to access files over a network much like local storage is accessed.",
              "if [ rpm -q nfs-utils ]; then",
              "log \"INFO\" \"nfs-utils package is installed, working on removing it now\"",
              "yum remove nfs-utils",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The nfs-utils package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove nfs-utils package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"nfs-utils package is not installed already\"",
              "fi",

              "# 2.2.19 Ensure rpcbind is not installed or the rpcbind services are masked (Automated)",
              "# The package rpcbind is a server that converts Remote Procedure Call (RPC) program numbers into universal addresses. It is an essential part of the RPC system, which allows different software applications to communicate with each other by sending requests and receiving responses over a network.",
              "if [ rpm -q rpcbind ]; then",
              "log \"INFO\" \"rpcbind package is installed, working on removing it now\"",
              "yum remove rpcbind",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The rpcbind package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove rpcbind package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"rpcbind package is not installed already\"",
              "fi",
                        
                        
              "# 2.2.20 Ensure rsync is not installed or the rsyncd service is masked (Automated)",
              "if [  rpm -q rsync ]; then",
              "log \"INFO\" \"rsync package is installed, working on removing it now\"",
              "yum remove rsync",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The rsync package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove rsync package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"rsync package is not installed already\"",
              "fi",
                        
                        
              "# 2.3.1 Ensure NIS Client is not installed (Automated)",
              "# Network Information Service (NIS), which is a client-server directory service protocol for distributing system configuration",
              "if [ rpm -q ypbind ]; then",
              "log \"INFO\" \"ypbind package is installed, working on removing it now\"",
              "yum remove ypbind",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The ypbind package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove ypbind package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"ypbind package is not installed already\"",
              "fi",
                        
                        
                        
              "# 2.3.2 Ensure rsh client is not installed (Automated)",
              "if [ rpm -q rsh ]; then",
              "log \"INFO\" \"rsh package is installed, working on removing it now\"",
              "yum remove rsh",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The rsh package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove rsh package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"rsh package is not installed already\"",
              "fi",
                        
                        
              "# 2.3.3 Ensure talk client is not installed (Automated)",
              "if [ rpm -q talk ]; then",
              "log \"INFO\" \"talk package is installed, working on removing it now\"",
              "yum remove talk",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The talk package removed successfully\"",
              "else",
              "log \"INFO\" \"failed to remove talk package\"",
              "fi",
              "else   ",
              "log \"INFO\" \"talk package is not installed\"",
              "fi",
                        
                        
                        
              "# 2.3.4 Ensure telnet client is not installed (Automated)",
              "if [ rpm -q telnet ]; then",
                "log \"INFO\" \"telnet package is installed, working on removing it now\"",
                "yum remove telnet",
                "if [ $? -eq 0 ]; then",
                  "log \"INFO\" \"The telnet package removed successfully\"",
                "else",
                  "log \"INFO\" \"failed to remove telnet package\"",
                "fi",
              "else   ",
                "log \"INFO\" \"telnet package is not installed alredy\"",
              "fi",
                        
                        
              "# 2.3.5 Ensure LDAP client is not installed (Automated)",
              "if [ rpm -q openldap-clients ]; then",
                "log \"INFO\" \"openldap-clients package is installed, working on removing it now\"",
                "yum remove openldap-clients",
                "if [ $? -eq 0 ]; then",
                  "log \"INFO\" \"The openldap-clients package removed successfully\"",
                "else",
                  "log \"INFO\" \"failed to remove openldap-clients package\"",
                "fi",
              "else   ",
                "log \"INFO\" \"openldap-clients package is not installed already\"",
              "fi",
                        
                        
              "# 2.3.6 Ensure TFTP client is not installed (Automated)",
              "if [ rpm -q tftp ]; then",
                "log \"INFO\" \"tftp package is installed, working on removing it now\"",
                "yum remove tftp",
                "if [ $? -eq 0 ]; then",
                  "log \"INFO\" \"The tftp package removed successfully\"",
                "else",
                  "log \"INFO\" \"failed to remove tftp package\"",
                "fi",
              "else   ",
                "log \"INFO\" \"tftp package is not installed already\"",
              "fi",
                        
                        
              "# 3.1.2 Ensure SCTP is disabled (Automated)",
              "if [ lsmod | grep sctp ]; then",
                "log \"INFO\" \"sctp module is loaded/enabled. working on removed & disabled it now\"",
                "# unload sctp module",
                "rmmod sctp",
                "if [ $? -eq 0 ]; then",
                  "log \"INFO\" \"sctp module has been unloaded successfully\"",
                "else",
                  "log \"INFO\" \"failed to unload the sctp moduel\"",
                "fi",
              "else",
                "log \"INFO\" \"sctp module is unloaded already\"",
              "fi",

              "# ensure that any attempt to load the sctp module results it does nothing",
              "printf \"install sctp /bin/true\" >> /etc/modprobe.d/sctp.conf",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"sctp module has been Appended to /etc/modprobe.d/sctp.conf successfully\"",
              "else",
              "log \"INFO\" \"failed Appended values into /etc/modprobe.d/sctp.conf\"",
              "fi",
              
              "# 3.1.3 Ensure DCCP is disabled (Automated)",
              "if lsmod | grep dccp; then",
                "log \"INFO\" \"dccp module is loaded/enabled. working on removed & disabled it now\"", 
                  "# unload dccp module",
                  "rmmod dccp",
                  "if [ $? -eq 0 ]; then",
                    "log \"INFO\" \"dccp module has been unloaded successfully\"",
                  "else",
                    "log \"INFO\" \"failed to unload the dccp moduel\"",
                  "fi",
            
                  "# ensure that any attempt to load the dccp module results it does nothing",
                  "printf \"install dccp /bin/true\" >> /etc/modprobe.d/dccp.conf",
              
                  "if [ $? -eq 0 ]; then",
                    "log \"INFO\" \"dccp module has been Appended to /etc/modprobe.d/dccp.conf successfully\"",
                  "else",
                    "log \"INFO\" \"failed Appended values into /etc/modprobe.d/dccp.conf\"",
                  "fi",
              "else",
                "log \"INFO\" \"dccp module is unloaded already, nothing to do\"",
              "fi",


              "# 3.1.4 Ensure wireless interfaces are disabled (Automated)",
              "# Define a function for checking wireless is enabel or not",

              "check_wireless () {",
              "if command -v nmcli >/dev/null 2>&1 ; then",
              "if nmcli radio all | grep -Eq '\\s*\\S+\\s+disabled\\s+\\S+\\s+disabled\b';",
              "then",
              "log \"INFO\" \"Wireless is not enabled\"",
              "else",
              "nmcli radio all",
              "fi",
              "elif [ -n \"$(find /sys/class/net/*/ -type d -name wireless)\" ]; ",
              "then",
              "t=0",
              "mname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename \"$(readlink -f \"$driverdir\"/device/driver/module)\";done | sort -u)",
              "for dm in $mname; do",
              "if grep -Eq \"^\\s*install\\s+$dm\\s+/bin/(true|false)\" /etc/modprobe.d/*.conf; ",
              "then",
              "/bin/true",
              "else",
                  "log \"INFO\" \"$dm is not disabled\"",
              "t=1",
              "fi",
              "done",
              "[ \"$t\" -eq 0 ] && log \"INFO\" \"Wireless is not enabled\"",
              "else",
                  "log \"INFO\" \"Wireless is not enabled\"",
              "fi",
              "}",

              "wirelessStatus=$(check_wireless)",
              "stringMatch=\"Wireless is not enabled\"",

              "if [ \"$wirelessStatus\" != \"$stringMatch\" ]; then",
                  "if command -v nmcli >/dev/null 2>&1 ; ",
                  "then",
                      "nmcli radio all off",
                  "else",
                      "if [ -n \"$(find /sys/class/net/*/ -type d -name wireless)\" ]; ",
                      "then",
                          "mname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename \"$(readlink -f \"$driverdir\"/device/driver/module)\";done | sort -u)",
                          "for dm in $mname; do",
                              "echo \"install $dm /bin/true\" >> /etc/modprobe.d/disable_wireless.conf",
                          "done",
                      "fi",
                  "fi",
              "else",
                  "log \"INFO\" \"The wireless has been disabeld already\"",
              "fi ",


              "# 3.2.1 Ensure IP forwarding is disabled (Automated) | Ipv4",
              "if [ $(sysctl -n net.ipv4.ip_forward) != \"0\" ]; then",
                  "log \"INFO\" \"the net.ipv4.ip_forward=0 value does not set, working on setting it now\"",
                  "printf \"net.ipv4.ip_forward = 0\" >> /etc/sysctl.d/60-netipv4_sysctl.conf",
                  "if [ $? -eq 0 ]; then ",
                      "log \"INFO\" \"The net.ipv4.ip_forward = 0 value has been set into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
                  "else",
                      "log \"INFO\" \"failed to set the net.ipv4.ip_forward = 0 value into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
                  "fi",

                  "# set as active kernel parameters",
                  "sysctl -w net.ipv4.ip_forward=0",

                  "if [ $? -eq 0 ]; then",
                      "log \"INFO\" \"The net.ipv4.ip_forward=0 value has been set as active kernel parameter successfully\"",
                  "else",
                      "log \"INFO\" \"failed to set the net.ipv4.ip_forward=0 value as active kernel parameter\"",
                  "fi",

                  "# flush/reload the routing table ",
                  "sysctl -w net.ipv4.route.flush=1",
                  "if [ $? -eq 0 ]; then",
                  "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
                  "else",
                  "log \"INFO\" \"failed to flush/reload the routing table\"",
                  "fi",
              "else",
                  "log \"INFO\" \"The net.ipv4.ip_forward value is equal to 0 already\"",
              "fi",



              "# 3.2.2 Ensure packet redirect sending is disabled (Automated)",
              "# set the net.ipv4.conf.all.send_redirects = 0 value",
              "if [ $(sysctl -n net.ipv4.conf.all.send_redirects) != \"0\" ]; then",
              "log \"INFO\" \"the net.ipv4.conf.all.send_redirects=0 value does not set, working on setting it now\"    ",
              "printf \"net.ipv4.conf.all.send_redirects = 0\" >> /etc/sysctl.d/60-netipv4_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"net.ipv4.conf.all.send_redirects = 0 value has been set into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.all.send_redirects = 0 value into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "fi    ",
              "# set the active kernel parameter",
              "sysctl -w net.ipv4.conf.all.send_redirects=0",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net.ipv4.conf.all.send_redirects=0 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.all.send_redirects=0 value as active kernel parameter\"",
              "fi",
              "# flush/reload the routing table ",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else",
              "log \"INFO\" \"The net.ipv4.conf.all.send_redirects value is equal to 0 already\"",
              "fi",
              "# set the net.ipv4.conf.default.send_redirects = 0 value",
              "if [ $(sysctl -n net.ipv4.conf.default.send_redirects) != \"0\" ]; then",
              "log \"INFO\" \"the net.ipv4.conf.default.send_redirects=0 value does not set, working on setting it now\"    ",
              "printf \"net.ipv4.conf.default.send_redirects = 0\" >> /etc/sysctl.d/60-netipv4_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"net.ipv4.conf.default.send_redirects = 0 value has been set into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.default.send_redirects = 0 value into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "fi    ",
              "# set the active kernel parameter",
              "sysctl -w net.ipv4.conf.default.send_redirects=0",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net.ipv4.conf.default.send_redirects=0 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.default.send_redirects=0 value as active kernel parameter\"",
              "fi",
              "# flush/reload the routing table ",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else",
              "log \"INFO\" \"The net.ipv4.conf.default.send_redirects value is equal to 0 already\"",
              "fi",

              "# 3.3.1 Ensure source routed packets are not accepted (Automated)",
              "# set the net.ipv4.conf.all.accept_source_route = 0 value",
              "if [ $(sysctl -n net.ipv4.conf.all.accept_source_route) != \"0\" ]; then",
              "log \"INFO\" \"the net.ipv4.conf.all.accept_source_route=0 value does not set, working on setting it now\"",
              "printf \"net.ipv4.conf.all.accept_source_route = 0\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"The net.ipv4.conf.all.accept_source_route = 0 value has been set into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.all.accept_source_route = 0 value into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "fi",
              "# set as active kernel parameters",
              "sysctl -w net.ipv4.conf.all.accept_source_route=0",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net.ipv4.conf.all.accept_source_route=0 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.all.accept_source_route=0 value as active kernel parameter\"",
              "fi",
              "# flush/reload the routing table ",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else",
              "log \"INFO\" \"The net.ipv4.conf.all.accept_source_route value is equal to 0 already\"",
              "fi",
              "# set the net.ipv4.conf.default.accept_source_route = 0",
              "if [ $(sysctl -n net.ipv4.conf.default.accept_source_route) != \"0\" ]; then",
              "log \"INFO\" \"the net.ipv4.conf.default.accept_source_route=0 value does not set, working on setting it now\"",
              "printf \"net.ipv4.conf.default.accept_source_route = 0\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"The net.ipv4.conf.default.accept_source_route = 0 value has been set into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.default.accept_source_route = 0 value into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "fi",
              "# set as active kernel parameters",
              "sysctl -w net.ipv4.conf.default.accept_source_route=0",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The sysctl -w net.ipv4.conf.default.accept_source_route=0 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.default.accept_source_route=0 value as active kernel parameter\"",
              "fi",
              "# flush/reload the routing table ",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else",
              "log \"INFO\" \"The net.ipv4.conf.default.accept_source_route value is equal to 0 already\"",
              "fi",



              "# 3.3.2 Ensure ICMP redirects are not accepted (Automated)",
              "# set the value of net.ipv4.conf.all.accept_redirects = 0",
              "log \"INFO\" \"Configuring IPv4 settings...\"",
              "if [ $(sysctl -n net.ipv4.conf.all.accept_redirects) != \"0\" ]; then",
              "log \"INFO\" \"the net.ipv4.conf.all.accept_redirects=0 value does not set, working on setting it now\"",
              "printf \"net.ipv4.conf.all.accept_redirects = 0\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"The net.ipv4.conf.all.accept_redirects = 0 value has been set into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.all.accept_redirects = 0 value into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "fi",
              "# set as active kernel parameters",
              "sysctl -w net.ipv4.conf.all.accept_redirects=0",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net.ipv4.conf.all.accept_redirects=0 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.all.accept_redirects=0 value as active kernel parameter\"",
              "fi",
              "# flush/reload the routing table ",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else",
              "log \"INFO\" \"The net.ipv4.conf.all.accept_redirects value is equal to 0 already\"",
              "fi",
              "# set the value of net.ipv4.conf.default.accept_redirects = 0",
              "if [ $(sysctl -n net.ipv4.conf.default.accept_redirects) != \"0\" ]; then",
              "log \"INFO\" \"the net.ipv4.conf.default.accept_redirects=0 value does not set, working on setting it now\"",
              "printf \"net.ipv4.conf.default.accept_redirects = 0\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"The net.ipv4.conf.default.accept_redirects = 0 value has been set into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.default.accept_redirects = 0 value into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "fi",
              "# set as active kernel parameters",
              "sysctl -w net.ipv4.conf.default.accept_redirects=0",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net.ipv4.conf.default.accept_redirects=0 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.default.accept_redirects=0 value as active kernel parameter\"",
              "fi",
              "# flush/reload the routing table ",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else",
              "log \"INFO\" \"The net.ipv4.conf.default.accept_redirects value is equal to 0 already\"",
              "fi",
              "# repeate the same above configs for IPv6",
              "log \"INFO\" \"Configuring IPv6 settings...\"",
              "if [ $(sysctl -n net.ipv6.conf.all.accept_redirects) != \"0\" ]; then",
              "log \"INFO\" \"the net.ipv6.conf.all.accept_redirects=0 value does not set, working on setting it now\"",
              "printf \"net.ipv6.conf.all.accept_redirects = 0\n\" >> /etc/sysctl.d/60-netipv6_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"The net.ipv6.conf.all.accept_redirects = 0 value has been set into /etc/sysctl.d/60-netipv6_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv6.conf.all.accept_redirects = 0 value into /etc/sysctl.d/60-netipv6_sysctl.conf\"",
              "fi",
              "# set as active kernel parameters",
              "sysctl -w net.ipv6.conf.all.accept_redirects=0",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net.ipv6.conf.all.accept_redirects=0 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv6.conf.all.accept_redirects=0 value as active kernel parameter\"",
              "fi",
              "# flush/reload the routing table ",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else",
              "log \"INFO\" \"The net.ipv6.conf.all.accept_redirects value is equal to 0 already\"",
              "fi",
              "# set the value of net.ipv6.conf.default.accept_redirects = 0",
              "if [ $(sysctl -n net.ipv6.conf.default.accept_redirects) != \"0\" ]; then",
              "log \"INFO\" \"the net.ipv6.conf.default.accept_redirects=0 value does not set, working on setting it now\"",
              "printf \"net.ipv6.conf.default.accept_redirects = 0\n\" >> /etc/sysctl.d/60-netipv6_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"The net.ipv6.conf.default.accept_redirects = 0 value has been set into /etc/sysctl.d/60-netipv6_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv6.conf.default.accept_redirects = 0 value into /etc/sysctl.d/60-netipv6_sysctl.conf\"",
              "fi",
              "# set as active kernel parameters",
              "sysctl -w net.ipv6.conf.default.accept_redirects=0",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net.ipv6.conf.default.accept_redirects=0 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv6.conf.default.accept_redirects=0 value as active kernel parameter\"",
              "fi",
              "# flush/reload the routing table ",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else",
              "log \"INFO\" \"The net.ipv6.conf.default.accept_redirects value is equal to 0 already\"",
              "fi",


              "# 3.3.3 Ensure secure ICMP redirects are not accepted (Automated)",
              "# set net.ipv4.conf.all.secure_redirects = 0 value",
              "if [ $(sysctl -n net.ipv4.conf.all.secure_redirects) != \"0\" ]; then",
              "log \"INFO\" \"the net.ipv4.conf.all.secure_redirects=0 value does not set, working on setting it now\"",
              "printf \"net.ipv4.conf.all.secure_redirects = 0\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"The net.ipv4.conf.all.secure_redirects = 0 value has been set into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.all.secure_redirects = 0 value into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "fi",
              "# set the active kernel parameters",
              "sysctl -w net.ipv4.conf.all.secure_redirects=0",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net.ipv4.conf.all.secure_redirects=0 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.all.secure_redirects=0 value as active kernel parameter\"",
              "fi",
              "# flush/reload the routing table ",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else",
              "log \"INFO\" \"The net.ipv4.conf.all.secure_redirects value is equal to 0 already\"",
              "fi",
              "# set net.ipv4.conf.default.secure_redirects = 0 value",
              "if [ $(sysctl -n net.ipv4.conf.default.secure_redirects) != \"0\" ]; then",
              "log \"INFO\" \"the net.ipv4.conf.default.secure_redirects=0 value does not set, working on setting it now\"",
              "printf \"net.ipv4.conf.default.secure_redirects = 0\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"The net.ipv4.conf.default.secure_redirects = 0 value has been set into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.default.secure_redirects = 0 value into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "fi",
              "# set the active kernel parameters",
              "sysctl -w net.ipv4.conf.default.secure_redirects=0",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net.ipv4.conf.default.secure_redirects=0 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.default.secure_redirects=0 value as active kernel parameter\"",
              "fi",
              "# flush/reload the routing table ",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else",
              "log \"INFO\" \"The net.ipv4.conf.default.secure_redirects value is equal to 0 already\"",
              "fi",


              "# 3.3.4 Ensure suspicious packets are logged (Automated)",
              "# set net.ipv4.conf.all.log_martians = 1 value ",
              "if [ $(sysctl -n net.ipv4.conf.all.log_martians) != \"1\" ]; then",
              "log \"INFO\" \"the net.ipv4.conf.all.log_martians=1 value does not set, working on setting it now\"",
              "printf \"net.ipv4.conf.all.log_martians = 1\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"The net.ipv4.conf.all.log_martians = 1 value has been set into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.all.log_martians = 1 value into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "fi",
              "# set the active kernel parameters",
              "sysctl -w net.ipv4.conf.all.log_martians=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net.ipv4.conf.all.log_martians=1 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.all.log_martians=1 value as active kernel parameter\"",
              "fi",
              "# flush/reload the routing table ",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else ",
              "log \"INFO\" \"the net.ipv4.conf.all.log_martians value is equal to 1 already\"",
              "fi",
              "# set net.ipv4.conf.default.log_martians = 1 value ",
              "if [ $(sysctl -n net.ipv4.conf.default.log_martians) != \"1\" ]; then",
              "log \"INFO\" \"the net.ipv4.conf.default.log_martians=1 value does not set, working on setting it now\"",
              "printf \"net.ipv4.conf.default.log_martians = 1\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"The net.ipv4.conf.default.log_martians = 1 value has been set into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.default.log_martians = 1 value into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "fi",
              "# set the active kernel parameters",
              "sysctl -w net.ipv4.conf.default.log_martians=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net.ipv4.conf.default.log_martians=1 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.conf.default.log_martians=1 value as active kernel parameter\"",
              "fi",
              "# flush/reload the routing table ",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else ",
              "log \"INFO\" \"the net.ipv4.conf.default.log_martians value is equal to 1 already\"",
              "fi",


              "# 3.3.5 Ensure broadcast ICMP requests are ignored (Automated)",
              "if [ $(sysctl -n net.ipv4.icmp_echo_ignore_broadcasts) != \"1\" ]; then",
              "log \"INFO\" \"the net.ipv4.icmp_echo_ignore_broadcasts=1 value does not set, working on setting it now\"",
              "printf \"net.ipv4.icmp_echo_ignore_broadcasts = 1\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"The net.ipv4.icmp_echo_ignore_broadcasts = 1 value has been set into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set thenet.ipv4.icmp_echo_ignore_broadcasts = 1 value into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "fi",
              "# set the active kernel parameters",
              "sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net.ipv4.icmp_echo_ignore_broadcasts=1 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.icmp_echo_ignore_broadcasts=1 value as active kernel parameter\"",
              "fi",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else",
              "log \"INFO\" \"The net.ipv4.icmp_echo_ignore_broadcasts value is equal to 1 already\"",
              "fi  ",


              "# 3.3.6 Ensure bogus ICMP responses are ignored (Automated)",
              "if [ $(sysctl -n net.ipv4.icmp_ignore_bogus_error_responses) != \"1\"]; then",
              "log \"INFO\" \"the net.ipv4.icmp_ignore_bogus_error_responses=1 value does not set, working on setting it now\"",
              "printf \"net.ipv4.icmp_ignore_bogus_error_responses = 1\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf",
              "if [ $? -eq 0 ]; then ",
              "log \"INFO\" \"The net.ipv4.icmp_ignore_bogus_error_responses = 1 value has been set into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.icmp_ignore_bogus_error_responses = 1 value into /etc/sysctl.d/60-netipv4_sysctl.conf\"",
              "fi",
              "# set the active kernel parameters",
              "sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The net.ipv4.icmp_ignore_bogus_error_responses=1 value has been set as active kernel parameter successfully\"",
              "else",
              "log \"INFO\" \"failed to set the net.ipv4.icmp_ignore_bogus_error_responses=1 value as active kernel parameter\"",
              "fi",
              "sysctl -w net.ipv4.route.flush=1",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
              "else",
              "log \"INFO\" \"failed to flush/reload the routing table\"",
              "fi",
              "else",
              "log \"INFO\" \"The net.ipv4.icmp_ignore_bogus_error_responses value is equal to 1 already\"",
              "fi"

          ]
        }
      }
    ]
  }