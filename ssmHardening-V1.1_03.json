{
  "schemaVersion": "2.2",
  "description": "Use this document to deploy and configure Sophos antivirus ",
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "runShellScript",
      "precondition": {
        "StringEquals": [
          "platformType",
          "Linux"
        ]
      },
      "inputs": {
        "runCommand": [

          "#!/bin/bash",

          "mkdir -p /var/log/path",
          "touch /var/log/path/hardening.log",
          "log_file=/var/log/path/hardening.log",

          "# Function to log messages",
          "log() {",
          "local log_level=$1",
          "local message=$2",
          "local timestamp=$(date +'%Y-%m-%d %H:%M:%S')",
          "echo \"[$timestamp] [$log_level] - $message\" >> $log_file",
          "}",


          "# 5.3.1 Ensure sudo is installed (Automated) ",
          "if rpm -q sudo; then",
          "log \"INFO\" \"Sudo is already installed\"",
          "else",
          "log \"INFO\" \"sudo in not insalled, installing it..\"",
          "yum install sudo -y",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"Sudo has been installed successfully\"",
          "else",
          "log \"INFO\" \"failed to install the sudo\"",
          "fi",
          "fi",
          
          "# 5.3.2 Ensure sudo commands use pty (Automated) ",
          "# Check if the script is run as root",
          "if [ \"$(id -u)\" -ne 0 ]; then",
          "log \"INFO\" \"This script must be run as root or with sudo.\"",
          
          "fi",
          "# Define the line to add to sudoers",
          "new_line=\"Defaults use_pty\"",
          "SUDOERS_FILE=\"/etc/sudoers\"",
          "# Create a backup of the sudoers file",
          "cp \"$SUDOERS_FILE\" \"$SUDOERS_FILE0.bak\"",
          "# Use nano text editor to edit sudoers file",
          "log \"INFO\" \"Adding '$new_line' to sudoers file...\"",
          "if visudo -c >/dev/null 2>&1; then",
          "# visudo syntax check successful, proceed with editing",
          "visudo -f /etc/sudoers.d/pty_settings <<EOF",
          "$new_line",
          "EOF",
          "log \"INFO\" \"Changes applied successfully.\"",
          "else",
          "log \"INFO\" \"Error: visudo syntax check failed. The changes were not applied.\"",
          "mv \"$SUDOERS_FILE0.bak\" \"$SUDOERS_FILE\"",
          
          "fi",
          
          
          "# 5.3.3 Ensure sudo log file exists (Automated)",
          "# Check if the script is run as root",
          "if [ \"$(id -u)\" -ne 0 ]; then",
          "log \"INFO\" \"This script must be run as root or with sudo.\"",
          
          "fi",
          "SUDOERS_FILE=\"/etc/sudoers\"",
          "# Create a backup of the sudoers file",
          "cp \"$SUDOERS_FILE\" \"$SUDOERS_FILE1.bak\"",
          "# Use nano text editor to edit sudoers file",
          "log \"INFO\" \"Adding Defaults logfile=\"/var/log/sudo.log\" to sudoers file...\"",
          "if visudo -c >/dev/null 2>&1; then",
          "# visudo syntax check successful, proceed with editing",
          "visudo -f /etc/sudoers.d/pty_settings <<EOF",
          "Defaults logfile=\"/var/log/sudo.log\"",
          "EOF",
          "log \"INFO\" \"Changes applied successfully.\"",
          "else",
          "log \"INFO\" \"Error: visudo syntax check failed. The changes were not applied.\"",
          "mv \"$SUDOERS_FILE1.bak\" \"$SUDOERS_FILE\"",
          
          "fi",

          "# 5.3.4 Ensure users must provide password for escalation (Automated)",
          "# Define the path to the sudoers file",
          "SUDOERS_FILE=\"/etc/sudoers\"",
          "# Check if the sudoers file exists",
          "if [ -e \"$SUDOERS_FILE\" ]; then",
          "# Create a backup of the sudoers file",
          "cp \"$SUDOERS_FILE\" \"$SUDOERS_FILE2.bak\"",
          "# Use sed to replace \"NOPASSWD\" with an empty string in each line",
          "sed -i 's/NOPASSWD//g' \"$SUDOERS_FILE\"",
          "# Check if sed was successful",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"Removed 'NOPASSWD' entries from the sudoers file.\"",
          "else",
          "log \"INFO\" \"Error: Failed to remove 'NOPASSWD' entries. Restoring the backup.\"",
          "mv \"$SUDOERS_FILE2.bak\" \"$SUDOERS_FILE\"",
          "fi",
          "else",
          "log \"INFO\" \"Error: Sudoers file not found at $SUDOERS_FILE\"",
          "fi",
          

          "# 5.3.5 Ensure re-authentication for privilege escalation is not disabled globally (Automated)",
          "# Define the path to the sudoers file",
          "SUDOERS_FILE=\"/etc/sudoers\"",
          "# Check if the sudoers file exists",
          "if [ -e \"$SUDOERS_FILE\" ]; then",
          "# Create a backup of the sudoers file",
          "cp \"$SUDOERS_FILE\" \"$SUDOERS_FILE3.bak\"",
          "# Use sed to replace \"!authenticate\" with an empty string in each line",
          "sed -i 's/!authenticate//g' \"$SUDOERS_FILE\"",
          "# Check if sed was successful",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"Removed '!authenticate' entries from the sudoers file.\"",
          "else",
          "log \"INFO\" \"Error: Failed to remove '!authenticate' entries. Restoring the backup.\"",
          "mv \"$SUDOERS_FILE3.bak\" \"$SUDOERS_FILE\"",
          "fi",
          "else",
          "log \"INFO\" \"Error: Sudoers file not found at $SUDOERS_FILE\"",
          "fi",

          "# 5.3.6 Ensure sudo authentication timeout is configured correctly (Automated)",
          "# Define the path to the sudoers file",
          "SUDOERS_FILE=\"/etc/sudoers\"",
          "# Check if the sudoers file exists",
          "if [ -e \"$SUDOERS_FILE\" ]; then",
          "# Create a backup of the sudoers file",
          "cp \"$SUDOERS_FILE\" \"$SUDOERS_FILE4.bak\"",
          "if visudo -c >/dev/null 2>&1; then",
          "# visudo syntax check successful, proceed with editing",
          "visudo -f /etc/sudoers.d/authTimeout_settings <<EOF",
          "Defaults env_reset, timestamp_timeout=15",
          "Defaults timestamp_timeout=15",
          "Defaults env_reset",
          "EOF",
          "log \"INFO\" \"Changes applied successfully.\"",
          "else",
          "log \"INFO\" \"Error: visudo syntax check failed. The changes were not applied.\"",
          "mv \"$SUDOERS_FILE4.bak\" \"$SUDOERS_FILE\"",
          "fi",
          "fi",


          "# 5.5.4 Ensure password hashing algorithm is SHA-512 (Automated) Accepted",
          "log \"INFO\" \"Working on set password hashing algorithm to SHA-512\"",
          "for fn in system-auth password-auth; do",
          "file=\"/etc/authselect/$(head -1 /etc/authselect/authselect.conf | grep 'custom/')/$fn\"",
          "if ! grep -Pq -- '^\\h*password\\h+(requisite|required|sufficient)\\h+pam_unix\\.so(\\h+[^#\n\r]+)?\\h+sha512\b.*$' \"$file\"; then",
          "if grep -Pq --'^\\h*password\\h+(requisite|required|sufficient)\\h+pam_unix\\.so(\\h+[^#\n\r]+)?\\h+(md5|blowfish|bigcrypt|sha256)\b.*$' \"$file\"; then",
          "sed -ri 's/(md5|blowfish|bigcrypt|sha256)/sha512/' \"$file\"",
          "else",
          "sed -ri's/(^\\s*password\\s+(requisite|required|sufficient)\\s+pam_unix.so\\s+)(.*)$/\\1sha512 \\3/' $file",
          "fi",
          "fi",
          "done",
          "authselect apply-changes",

          "# 6.1.3 Ensure permissions on /etc/passwd are configured (Automated) Accepted",
          "chown root:root /etc/passwd",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the root user has been set as owner and group owner for /etc/passwd\"",
          "else",
          "log \"INFO\" \"failed to set the root user as owner and group owner for /etc/passwd\"  ",
          "fi",
          "chmod 644 /etc/passwd",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the permission for /etc/passwd has been changed to 644\"",
          "else",
          "log \"INFO\" \"failed to set the permission for /etc/passwd to 644\"",
          "fi",

          "# 6.1.3 Ensure permissions on /etc/shadow are configured (Automated) Accepted",
          "chown root:root /etc/shadow",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the root user has been set as owner and group owner for /etc/shadow\"",
          "else",
          "log \"INFO\" \"failed to set the root user as owner and group owner for /etc/shadow\"  ",
          "fi",
          "chmod 0000 /etc/shadow",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the permission for /etc/shadow has been changed to 0000\"",
          "else",
          "log \"INFO\" \"failed to set the permission for /etc/shadow to 0000\"",
          "fi",

          "# 6.1.5 Ensure permissions on /etc/group are configured (Automated)",
          "chown root:root /etc/group",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the root user has been set as owner and group owner for /etc/group\"",
          "else",
          "log \"INFO\" \"failed to set the root user as owner and group owner for /etc/group\"  ",
          "fi",
          "chmod u-x,g-wx,o-wx /etc/group",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the permission for /etc/group has been changed to u-x,g-wx,o-wx\"",
          "else",
          "log \"INFO\" \"failed to set the permission for /etc/group to u-x,g-wx,o-wx\"",
          "fi",

          "# 6.1.6 Ensure permissions on /etc/gshadow are configured (Automated) ",
          "chown root:root /etc/gshadow",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the root user has been set as owner and gshadow owner for /etc/gshadow\"",
          "else",
          "log \"INFO\" \"failed to set the root user as owner and gshadow owner for /etc/gshadow\"  ",
          "fi",
          "chmod 0000  /etc/gshadow",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the permission for /etc/gshadow has been changed to 0000 \"",
          "else",
          "log \"INFO\" \"failed to set the permission for /etc/gshadow to 0000 \"",
          "fi",

          "# 6.1.7 Ensure permissions on /etc/passwd- are configured (Automated)",
          "# The /etc/passwd- file contains backup user account information",
          "chown root:root /etc/passwd-",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the root user has been set as owner and group owner for /etc/passwd-\"",
          "else",
          "log \"INFO\" \"failed to set the root user as owner and group owner for /etc/passwd-\"",  
          "fi",
          "chmod u-x,go-wx /etc/passwd-",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the permission for /etc/passwd- has been changed to u-x,go-wx\"",
          "else",
          "log \"INFO\" \"failed to set the permission for /etc/passwd- to u-x,go-wx\"",
          "fi",

          "# 6.1.8 Ensure permissions on /etc/shadow- are configured (Automated)",
          "# The /etc/shadow- file contains backup user account information",
          "chown root:root /etc/shadow-",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the root user has been set as owner and group owner for /etc/shadow-\"",
          "else",
          "log \"INFO\" \"failed to set the root user as owner and group owner for /etc/shadow-\"  ",
          "fi",
          "chmod 0000 /etc/shadow-",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the permission for /etc/shadow- has been changed to 0000\"",
          "else",
          "log \"INFO\" \"failed to set the permission for /etc/shadow- to 0000\"",
          "fi",

          "# 6.1.9 Ensure permissions on /etc/group- are configured (Automated) ",
          "# The /etc/group- file contains backup user account information",
          "chown root:root /etc/group-",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the root user has been set as owner and group owner for /etc/group-\"",
          "else",
          "log \"INFO\" \"failed to set the root user as owner and group owner for /etc/group-\"  ",
          "fi",
          "chmod u-x,go-wx /etc/group-",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the permission for /etc/group- has been changed to u-x,go-wx\"",
          "else",
          "log \"INFO\" \"failed to set the permission for /etc/group- to u-x,go-wx\"",
          "fi",

          "# 6.1.10 Ensure permissions on /etc/gshadow- are configured",
          "# The /etc/gshadow- file contains backup user account information",
          "chown root:root /etc/gshadow-",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the root user has been set as owner and gshadow owner for /etc/gshadow-\"",
          "else",
          "log \"INFO\" \"failed to set the root user as owner and gshadow owner for /etc/gshadow-\"  ",
          "fi",
          "chmod 0000 /etc/gshadow-",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"the permission for /etc/gshadow- has been changed to 0000\"",
          "else",
          "log \"INFO\" \"failed to set the permission for /etc/gshadow- to 0000\"",
          "fi",

          "# 6.2.1 Ensure password fields are not empty (Automated)",
          "users=$(awk -F: '($2 == \"\" ) { print $1 }' /etc/shadow)",
          "if [ -z \"$users\" ]; then",
          "log \"INFO\" \"There's no users have empty password field in /etc/shadow file\"",
          "else",
          "log \"INFO\" \"The Following users have not password filed $users, Working on configure it now\"",
          "for user in $users; do",
          "log \"INFO\" \"The Following users have not password filed: $users, Working on configure it now\"",
          "passwd -l \"$user\"",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"The follwoing user has been locked successfully: $user\"",
          "else",
          "log \"INFO\" \"failed to lock the following user : $user\"",
          "fi",
          "done",
          "fi",

          "# 3.1.1 Verify if IPv6 is enabled on the system (Manual)",
          "# in our satuation will disable it ",
          "if grep -i -r \"net.ipv6.conf.all.disable_ipv6 = 1\" /etc/sysctl.d/*; then",
          "log \"INFO\" \"The ipv6 is disabled already, nothing to do\" ",
          "else",
          "log \"INFO\" \"No Configs has been set for disabling ipV6, working on configre it now\"",
          "printf \"",
          "net.ipv6.conf.all.disable_ipv6 = 1",
          "net.ipv6.conf.default.disable_ipv6 = 1",
          "\" >> /etc/sysctl.d/60-disable_ipv6.conf",
          "# Check the pevious command status",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"The Following Parameters has been addedd successfully under /etc/sysctl.d/60-disable_ipv6.conf\"",
          "log \"INFO\" \"net.ipv6.conf.all.disable_ipv6 = 1",
          "net.ipv6.conf.default.disable_ipv6 = 1\"",
          "else",
          "log \"INFO\" \"failed to add the disable parameters under /etc/sysctl.d/60-disable_ipv6.conf\"",
          "fi",
          "# Set the active kernel parameters",
          "sysctl -w net.ipv6.conf.all.disable_ipv6=1",
          "sysctl -w net.ipv6.conf.default.disable_ipv6=1",
          "# flush/reload the routing table ",
          "sysctl -w net.ipv6.route.flush=1",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"The Routing table has been flushed and reloaded successfully\"",
          "else",
          "log \"INFO\" \"failed to flush/reload the routing table\"",
          "fi",
          "fi",

          "# Check if Python 2 is installed",
          "if ! command -v python2 &> /dev/null; then",
          "log \"INFO\" \"Python 2 is not installed. Installing Python 2.\"",
          "yum install -y python2",
          "# check the output result",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"The python2 package has been installed successfully\"",
          "else",
          "log \"INFO\" \"Failed to install the python2 package.\"",
          "fi",
          "else",
          "log \"INFO\" \"The Python 2 is already installed, Nothing to do\"",
          "fi",


          "# configure rsyslog",
          "if grep -i '*.* @1.1.10.10:0' /etc/rsyslog.conf; then",
          "log \"INFO\" \"INFO  The 1.1.10.10 IP has been configured already, Nothing to do\"",
          "else",
          "log \"INFO\" \"INFO The 1.1.10.10 have not configured, Working on set it now\"",
          "printf \"",
          "*.* @1.1.10.10:0\" >> /etc/rsyslog.conf",
          "systemctl --now restart rsyslog",
          "if [ $? -eq 0 ]; then",
          "log \"INFO\" \"INFO The 1.1.10.10 have configured Successfully to send rsyslog\"",
          "else",
          "log \"INFO\" \"INFO failed to set The 1.1.10.10 in rsys configurtions to send logs\"",
          "fi ",
          "fi",

          "# cve-2023-48795 | https://access.redhat.com/security/cve/cve-2023-48795",
          "mkdir -p /etc/crypto-policies/policies/modules/",
          "printf \"",
          "cipher@SSH = -CHACHA20-POLY1305",
          "ssh_etm = 0\" > /etc/crypto-policies/policies/modules/CVE-2023-48795.pmod",

              "if [ $? -eq 0 ]; then",
                  "log \"INFO\" \"The cipher@SSH = -CHACHA20-POLY1305  AND ssh_etm = 0 values has been set successfully under /etc/crypto-policies/policies/modules/CVE-2023-48795.pmod file\"",
              "else",
              "log \"INFO\" \"failed to set The cipher@SSH = -CHACHA20-POLY1305  AND ssh_etm = 0 values under /etc/crypto-policies/policies/modules/CVE-2023-48795.pmod file\"",
              "fi",

          "# applying the resulting subpolicy with",
          "update-crypto-policies --set $(update-crypto-policies --show):CVE-2023-48795",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The subpolicy values has been applied successfully\"",
              "else", 
              "log \"INFO\" \"failed to set The subpolicy values\"",
              "fi",

          "# restart the sshd service",
          "systemctl restart sshd.service",
              "if [ $? -eq 0 ]; then",
              "log \"INFO\" \"The SSHD service has been restarted successfully\"",
              "else", 
              "log \"INFO\" \"failed to restart the sshd servive\"",
              "fi",


          "# verification step | the above action should be remove the follwing lines from  /etc/crypto-policies/back-ends/opensshserver.config, /etc/crypto-policies/back-ends/openssh.config",
          "log \"INFO\" \"Verfiy The weakCipher are messing\"",

          "# Define the patterns to loop on",
          "PATTERN1=\"chacha20-poly1305@openssh.com\"",
          "PATTERN2=\"hmac-sha2-512-etm@openssh.com\"",
          "PATTERN3=\"hmac-sha2-256-etm@openssh.com\"",
          "PATTERN4=\"hmac-sha1-etm@openssh.com\"",
          "PATTERN5=\"hmac-md5-etm@openssh.com\"",

          "for pattern in \"$PATTERN1\" \"$PATTERN2\" \"$PATTERN3\" \"$PATTERN4\" \"$PATTERN5\"; do",
              "if grep -i -r \"$pattern\" /etc/crypto-policies/back-ends/*; then",
              "log \"INFO\" \"The WeakCiphers are still exist under /etc/crypto-policies/back-ends/*\"",
              "else",
              "log \"INFO\" \"The WeakCiphers are Missing successfully\"",
              "fi",
          "done",

          "# CVE-2023-48795 | https://alas.aws.amazon.com/cve/html/CVE-2023-48795.html",
          "if grep -i \"Amazon linux\" /etc/os-release; then",
              "echo \"The Machine OS is Amazon Linux, Will handel the subpolicy values and OpenSSH (CVE-2023-48795) by updating the OpenSSH Package\"",
              "yum update openssh >> /var/log/path/hardening.log",
          "else",
              "CONTINUE=YES",
          "fi"
        ]
      }
    }
  ]
}